version: '3'
services:
  php-web-server:
    image: nginx:latest
    container_name: ${WEB_SERVER_CONTAINER_NAME}
    ports:
      - "80:80"
    volumes:
      - ./.config/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./src:/var/www/html/
    depends_on:
      - php
      - mysql-php
      - phpMyAdmin
  php:
    build:
      context: ./dockerfiles
      dockerfile: PHP.Dockerfile
    container_name: ${PHP_INTERPRETER_CONTAINER_NAME}
    expose:
      - 9000
    volumes:
      - ./src:/var/www/html/
    networks:
      default:
        aliases:
          - ${PHP_INTERPRETER_CONTAINER_NAME}
  mysql-php:
    image: mariadb:latest
    container_name: ${MYSQL_CONTAINER_NAME}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - mysql-php-data:/var/lib/mysql
    expose:
      - 3306
    networks:
      default:
        aliases:
          - ${MYSQL_CONTAINER_NAME}
  phpMyAdmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ${PHPMYADMIN_CONTAINER_NAME}
    environment:
      PMA_HOST: ${MYSQL_CONTAINER_NAME}
      PMA_PORT: 3306
      PMA_ABSOLUTE_URI: ${PHPMYADMIN_URI}
    expose:
      - 80
    depends_on:
      - mysql-php
    networks:
      default:
        aliases:
          - ${PHPMYADMIN_CONTAINER_NAME}
  composer:
    image: composer:latest
    container_name: ${COMPOSER_CONTAINER_NAME}
    volumes:
      - ./src:/var/www/html/
    working_dir: /var/www/html/
  artisan:
    build:
      context: ./dockerfiles
      dockerfile: Artisan.Dockerfile
    container_name: ${ARTISAN_CONTAINER_NAME}
    volumes:
      - ./src:/var/www/html/
    working_dir: /var/www/html/
    entrypoint: [ "/entry/artisan-entrypoint.sh" ]
    depends_on:
      - mysql-php
    networks:
      default:
        aliases:
          - ${ARTISAN_CONTAINER_NAME}

volumes:
  mysql-php-data: {}